import { useState } from "react";
import { db, collection, addDoc } from "../firebase"; // ‚úÖ –Ü–º–ø–æ—Ä—Ç Firebase
import styles from "@/styles/sections/callback.module.scss"; // ‚úÖ –Ü–º–ø–æ—Ä—Ç —Å—Ç–∏–ª—ñ–≤

const Callback = () => {
  const [phone, setPhone] = useState("+380");
  const [selectedSocial, setSelectedSocial] = useState("");
  const [nickname, setNickname] = useState("");
  const [loading, setLoading] = useState(false);

  // üî• –§—É–Ω–∫—Ü—ñ—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ —É Firestore
  const sendToFirebase = async (data) => {
    try {
      await addDoc(collection(db, "requests"), data);
      console.log("‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∞ —É Firestore:", data);
      return true;
    } catch (error) {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —É Firestore:", error);
      return false;
    }
  };

  // üî• –§—É–Ω–∫—Ü—ñ—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –∑–∞—è–≤–∫–∏ —É Telegram
  const sendToTelegram = async (message) => {
    const botToken = "7711059163:AAHWNiFfmUzvV3ViPSsdGJl-GgQdaq8ucus"; // üî• –ó–∞–º—ñ–Ω–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω–∏–π —Ç–æ–∫–µ–Ω
    const chatId = "1446641391"; // üî• –ó–∞–º—ñ–Ω–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω–∏–π chat_id
    const url = `https://api.telegram.org/bot${botToken}/sendMessage`;

    const data = {
      chat_id: chatId,
      text: message,
      parse_mode: "HTML",
    };

    console.log("üì§ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ Telegram:", JSON.stringify(data, null, 2));

    try {
      const response = await fetch(url, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(data),
      });

      const result = await response.json();
      console.log("üì© –í—ñ–¥–ø–æ–≤—ñ–¥—å Telegram API:", result);

      return response.ok;
    } catch (error) {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –≤ Telegram:", error);
      return false;
    }
  };

  // üî• –û–±—Ä–æ–±–Ω–∏–∫ —Ñ–æ—Ä–º–∏
  const handleSubmit = async (e) => {
    e.preventDefault();

    if (!phone.replace("+380", "").trim() && (!selectedSocial || nickname.trim() === "")) {
      alert("‚ö†Ô∏è –ó–∞–ø–æ–≤–Ω—ñ—Ç—å —Ö–æ—á–∞ –± –æ–¥–∏–Ω —Å–ø–æ—Å—ñ–± –∑–≤'—è–∑–∫—É.");
      return;
    }

    setLoading(true);

    const site = window.location.hostname;
    const requestData = {
      site,
      phone: phone.length > 4 ? phone : "–Ω–µ –≤–∫–∞–∑–∞–Ω–æ",
      social: selectedSocial || "–Ω–µ –≤–∫–∞–∑–∞–Ω–æ",
      nickname: nickname.trim() !== "" ? nickname : "–Ω–µ –≤–∫–∞–∑–∞–Ω–æ",
      status: "new",
      timestamp: new Date().toISOString(),
    };

    const message = `üìå <b>–ù–æ–≤–∞ –∑–∞—è–≤–∫–∞</b>\nüåç <b>–°–∞–π—Ç:</b> ${site}\nüìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${phone.length > 4 ? phone : "–Ω–µ –≤–∫–∞–∑–∞–Ω–æ"}\nüîó <b>${selectedSocial}:</b> ${nickname.trim() !== "" ? nickname : "–Ω–µ –≤–∫–∞–∑–∞–Ω–æ"}`;

    const firebaseSuccess = await sendToFirebase(requestData);
    const telegramSuccess = await sendToTelegram(message);

    if (firebaseSuccess && telegramSuccess) {
      alert("‚úÖ –í–∞—à—ñ –¥–∞–Ω—ñ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!");
      setPhone("+380");
      setNickname("");
      setSelectedSocial("");
    } else {
      alert("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
    }

    setLoading(false);
  };

  // üî• –í–∞–ª—ñ–¥–∞—Ü—ñ—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É (–¥–æ–∑–≤–æ–ª—è—î –≤–≤–æ–¥–∏—Ç–∏ –ª–∏—à–µ —Ü–∏—Ñ—Ä–∏ –ø—ñ—Å–ª—è "+380")
  const handlePhoneChange = (e) => {
    const value = e.target.value.replace(/\D/g, ""); // –í–∏–¥–∞–ª—è—î –≤—Å—ñ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ñ —Å–∏–º–≤–æ–ª–∏
    if (value.startsWith("380")) {
      setPhone(`+${value}`);
    } else {
      setPhone("+380" + value.slice(3)); // –î–æ–¥–∞—î "+380" –Ω–∞ –ø–æ—á–∞—Ç–∫—É
    }
  };

  // üî• –í–∞–ª—ñ–¥–∞—Ü—ñ—è –Ω—ñ–∫–Ω–µ–π–º–∞ –∞–±–æ –Ω–æ–º–µ—Ä–∞ Viber
  const handleNicknameChange = (e) => {
    let value = e.target.value;
    if (selectedSocial === "Viber") {
      // ‚úÖ –Ø–∫—â–æ Viber ‚Äî –¥–æ–∑–≤–æ–ª—è—î–º–æ –ª–∏—à–µ —Ü–∏—Ñ—Ä–∏ (—è–∫ —Ç–µ–ª–µ—Ñ–æ–Ω)
      value = value.replace(/\D/g, "");
      if (value.startsWith("380")) {
        setNickname(`+${value}`);
      } else {
        setNickname("+380" + value.slice(3)); // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –¥–æ–¥–∞—î "+380"
      }
    } else {
      // ‚úÖ –î–ª—è —ñ–Ω—à–∏—Ö —Å–æ—Ü–º–µ—Ä–µ–∂ –¥–æ–∑–≤–æ–ª–µ–Ω—ñ –ª—ñ—Ç–µ—Ä–∏, —Ü–∏—Ñ—Ä–∏ —Ç–∞ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–∏
      value = value.replace(/[^a-zA-Z0-9_.-]/g, ""); // –í–∏–¥–∞–ª—è—î –≤—Å–µ, –æ–∫—Ä—ñ–º –¥–æ–∑–≤–æ–ª–µ–Ω–∏—Ö —Å–∏–º–≤–æ–ª—ñ–≤
      setNickname("@" + value);
    }
  };

  return (
    <section id="callback" className={styles.callback}>
      <div className={styles.fogTop}></div>
      <div className={styles.container} id="form">
        <h2 className={styles.title}>–©–æ–± –∑—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –æ–±–µ—Ä—ñ—Ç—å –∑—Ä—É—á–Ω–∏–π —Å–ø–æ—Å—ñ–± –∑–≤'—è–∑–∫—É</h2>

        <form onSubmit={handleSubmit} className={styles.form}>
          {/* üìû –í–∞—Ä—ñ–∞–Ω—Ç 1: –¢–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –¥–∑–≤—ñ–Ω–æ–∫ */}
          <div className={styles.choiceBlock}>
            <h3 className={styles.choiceTitle}>–í–∞—Ä—ñ–∞–Ω—Ç 1: –¢–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –¥–∑–≤—ñ–Ω–æ–∫</h3>
            <div className={styles.inputGroup}>
              <input
                type="tel"
                placeholder="–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É"
                value={phone}
                onChange={handlePhoneChange}
                className={styles.input}
                maxLength={13} // –û–±–º–µ–∂–µ–Ω–Ω—è –¥–æ–≤–∂–∏–Ω–∏ +380XXXXXXXXX (12 —Å–∏–º–≤–æ–ª—ñ–≤ + "+")
              />
            </div>
          </div>

          <div className={styles.separator}>–ê–ë–û</div>

          {/* üí¨ –í–∞—Ä—ñ–∞–Ω—Ç 2: –°–æ—Ü–º–µ—Ä–µ–∂—ñ */}
          <div className={styles.choiceBlock}>
            <h3 className={styles.choiceTitle}>–í–∞—Ä—ñ–∞–Ω—Ç 2: –ù–∞–ø–∏—à–µ–º–æ –≤–∞–º —É —Å–æ—Ü–º–µ—Ä–µ–∂–∞—Ö</h3>
            <div className={styles.socialCheckboxes}>
              {["Telegram", "Instagram", "Viber"].map((social) => (
                <label key={social}>
                  <input
                    type="radio"
                    name="social"
                    value={social}
                    checked={selectedSocial === social}
                    onChange={(e) => {
                      setSelectedSocial(e.target.value);
                      setNickname(e.target.value === "Viber" ? "+380" : "@");
                    }}
                  />
                  {social}
                </label>
              ))}
            </div>

            <div className={styles.inputGroup}>
              <input
                type={selectedSocial === "Viber" ? "tel" : "text"}
                placeholder={
                  selectedSocial
                    ? selectedSocial === "Viber"
                      ? "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —É Viber"
                      : `–í–∞—à –Ω—ñ–∫–Ω–µ–π–º —É ${selectedSocial}`
                    : "–û–±–µ—Ä—ñ—Ç—å —Å–æ—Ü–º–µ—Ä–µ–∂—É"
                }
                value={nickname}
                onChange={handleNicknameChange}
                className={styles.input}
                disabled={!selectedSocial} // –ó–∞–±–æ—Ä–æ–Ω—è—î –≤–≤–µ–¥–µ–Ω–Ω—è, —è–∫—â–æ –Ω–µ –≤–∏–±—Ä–∞–Ω–∞ —Å–æ—Ü–º–µ—Ä–µ–∂–∞
                maxLength={selectedSocial === "Viber" ? 13 : 30} // –û–±–º–µ–∂–µ–Ω–Ω—è –¥–æ–≤–∂–∏–Ω–∏
              />
            </div>
          </div>

          {/* üîò –ö–Ω–æ–ø–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ */}
          <button type="submit" className={styles.button} disabled={loading}>
            {loading ? "–ù–∞–¥—Å–∏–ª–∞—î–º–æ..." : "–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∑–∞—è–≤–∫—É"}
          </button>
        </form>
      </div>
      <div className={styles.fogBottom}></div>
    </section>
  );
};

export default Callback;
